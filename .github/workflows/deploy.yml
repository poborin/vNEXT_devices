# This is a basic workflow that is manually triggered

on: [push]
name: vNEXT devices

env:
  AZURE_FUNCTIONAPP_NAME: injest-payload-code-exercise  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './devices'                   # set this to the path to your web app project, defaults to the repository root
  DOTNET5_VERSION: '5.0.x'              # set this to the dotnet version to use
  DOTNET3_VERSION: '3.1.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      # Checkout code
    - uses: actions/checkout@main

      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Bicep file
    - name: deploy infrustructure
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        scope: subscription
        region: australiasoutheast
        template: ./main.bicep
        failOnStdErr: false

    - name: Setup DotNet ${{ env.DOTNET3_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET3_VERSION }}
        
    - name: Setup DotNet ${{ env.DOTNET5_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET5_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}